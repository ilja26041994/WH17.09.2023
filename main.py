# # Вы занимаетесь сборкой игрушечных машинок.
# # Каждая машинка должна иметь четыре колеса, один корпус и две фигурки человечков внутри.
# # Напишите функцию, которая будет принимать количество колес,
# # корпусов и человечков и возвращать количество машинок, которые можно собрать из этих деталей.
# # Примеры:
# # cars(2, 48, 76) ➞ 0
# # # 2 колеса, 48 корпусов, 76 человечков
# # cars(43, 15, 87) ➞ 10
# # cars(88, 37, 17) ➞ 8
#
# def cars(num_wheel, num_body, num_human):
#     countOfCars = -1
#     while num_wheel > 0 and num_body > 0 and num_human > 0:
#         num_wheel -= 4
#         num_body -= 1
#         num_human -= 2
#         countOfCars += 1
#     return countOfCars
#
# wheel = int(input('Введите количество колес: '))
# body = int(input('Введите количество корпусов: '))
# human = int(input('Введите количество человечков: '))
# print(cars(wheel, body, human))


# # Медиана набора чисел — это число, которое находится в середине этого набора, если его упорядочить по возрастанию.
# # То есть такое число, что половина из элементов набора не меньше него, а другая половина не больше.
# # Напишите функцию, которая будет принимать отсортированный список чисел и возвращать медиану. Если число дробное, его нужно округлить до десятых.
# # Примеры:
# # median([1, 2, 4, 5, 6, 8, 8, 8, 10]) ➞ 6
# # median([2, 2, 6, 8, 8, 10, 10]) ➞ 8
# # median([1, 2, 2, 4, 7, 8, 9, 10]) ➞ 5.5
#
# def median(numbers):
#     numbers.sort()
#     medianOfList = 0
#     if len(numbers) % 2 == 0:
#         medianOfList = (numbers[len(numbers) // 2] + numbers[len(numbers) // 2 - 1]) / 2
#     else:
#         medianOfList = numbers[len(numbers) // 2]
#     return medianOfList
#
# print(median([1, 2, 4, 5, 6, 8, 8, 8, 10]))
# print(median([2, 2, 6, 8, 8, 10, 10]))
# print(median([1, 2, 2, 4, 7, 8, 9, 10]))